nc: 1  # number of classes
depth_multiple: 1  # model depth multiple
width_multiple: 1  # layer channel multiple
anchors:
    # autogenerated by yolo
  - [0,0, 0,0, 0,0] # P3/8
  - [0,0, 0,0, 0,0] # P4/16
  - [0,0, 0,0, 0,0] # P5/32
backbone:
  # [from, number, module, args]
  [[-1, 1, katana.Grayscale,        []],                  #  0
   [-1, 1, katana.Conv2d,           [1, 5, 3, 2]],        #  1
   [-1, 1, katana.BatchNorm,        [5]],                 #  2
   [-1, 1, katana.ReLU,             [6]],                 #  3 c1
   [-1, 1, katana.InvertedResidual, [5, 4, 20, 2]],        #  4
   [-1, 1, katana.InvertedResidual, [20, 4, 32, 2]],      #  5
   [-1, 1, katana.InvertedResidual, [32, 3]],             #  6
   [-1, 5, katana.InvertedResidual, [32, 3]],             #  7 c3
   [-1, 1, katana.InvertedResidual, [32, 3, 32, 2]],    #  8
   [-1, 2, katana.InvertedResidual, [32, 3]],             #  9 
   [-1, 2, katana.InvertedResidual, [32, 3]],             # 10 c4
   [-1, 1, katana.InvertedResidual, [32, 3, None, 2]],    # 11
   [-1, 2, katana.InvertedResidual, [32, 3]],             # 12
   [-1, 1, katana.Conv2d,           [32, 32, 3]],         # 13
   [-1, 1, katana.BatchNorm,        [32]],                # 14
   [-1, 1, katana.ReLU,             [6]]]                 # 15 c5

# YOLOv5 v6.0 head
head:
  [[ 7, 1, katana.Conv2d,           [32, 48, 1]],         # 16 p3
   [10, 1, katana.Conv2d,           [32, 32, 1]],         # 17 p4
   [15, 1, katana.Conv2d,           [32, 32, 1]],         # 18
   [-1, 1, katana.BatchNorm,        [32]],                # 19 p56
   [-1, 1, katana.Conv2d,           [32, 32, 1]],         # 20 p5
   [16, 1, katana.Head,             [48, 48, 5]],         # 21 o3
   [17, 1, katana.Head,             [32, 32, 3]],         # 22 o4
   [20, 1, katana.Head,             [32, 32, 1]],         # 23 o5
   [[21, 22, 23], 1, katana.Detect, [nc, anchors,[48, 32, 32]]]   # 43 Detect(P3-P5)
   ]
